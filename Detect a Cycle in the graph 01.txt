
class Solution {
    // Function to detect cycle in a directed graph.
    public static boolean check(int node,int []vis,int[]pathvis,ArrayList<ArrayList<Integer>> adj){
        vis[node]=1;
        pathvis[node]=1;
        for(int it:adj.get(node)){
            if(vis[it]==0){
                if(check(it,vis,pathvis,adj)==true){
                    return true;
                }
                else if(pathvis[it]==1){
                    return true;
                }
                
            }
            
        }
        pathvis[node]=0;
            return false;
    }
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        
        int vis[]=new int[V];
        int pathvis[]=new int [V];
        for(int i=0;i<V;++i){
            if(vis[i]==0 && check(i,vis,pathvis,adj)==true)
                
                return true;
                
            
        }
        return false;
    }
}