 
class Solution
{
    public static void dfs(int [][] ans,int sr,int sc,int newColor,int [][]image,int 
    initialColor){
        ans[sr][sc]=newColor;
        int n=image.length;
        int m=image[0].length;
        for(int delrow=-1;delrow<2;++delrow){
           for(int delcol=-1;delcol<2;++delcol){
               if(Math.abs(delrow)!=Math.abs(delcol)){
                   int nrow=sr+delrow;
                   int ncol=sc+delcol;
                  if (nrow >= 0 && nrow < n && ncol >= 0 && ncol < m &&
    image[nrow][ncol] == initialColor && ans[nrow][ncol] != newColor) {

                        dfs(ans,nrow,ncol,newColor,image,initialColor);
                   }
               }
           }
        }
    }
    
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor)
    {
        // Code here 
        int initialColor=image[sr][sc];
        int [][]ans=image;
         
         dfs(ans,sr,sc,newColor,image, initialColor);
         return ans;
        
    }
}